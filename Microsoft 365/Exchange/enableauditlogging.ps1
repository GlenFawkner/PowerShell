&amp;lt;# This script will use the admin users created by the first script to enable the Unified Audit Log in each tenant. If enabling the Unified Audit Log is successful, it'll remove the created admin. If it's not successful, it'll keep the admin in place and add it to another CSV. You can retry these tenants by modifying the $Customers value to import the RemainingAdminsCsv in the next run. #&amp;gt;
 
#-------------------------------------------------------------
 
# Here are some things you can modify:
 
# This is your partner admin user name that has delegated administration permission
 
$UserName = "glen@skypoint.co.nz"
 
# IMPORTANT: This is the default password for the temporary admin users. Use the same password that you specified in the first script.
 
$NewAdminPassword = "aud1t@SPT"
 
# This is the CSV containing the details of the created admins generated by the first script. If you changed the path in the first script, you'll need to change it here.
 
$Customers = import-csv "C:\temp\CreatedAdmins.csv"
 
# This CSV will contain a list of all admins removed by this script.
 
$RemovedAdminsCsv = "C:\temp\RemovedAdmins.csv"
 
# This CSV will contain a list of all unsuccessful admins left unchanged by this script. Use it to retry this script without having to start again.
 
$RemainingAdminsCsv = "C:\temp\RemainingAdmins.csv"
 
#-------------------------------------------------------------
 
$Cred = get-credential -Credential $UserName
Connect-MsolService -Credential $Cred
foreach ($Customer in $Customers) {
 
    Write-Host $Customer.CompanyName.ToUpper()
    Write-Host " "
 
    $NewAdminUPN = $Customer.UserPrincipalName
 
    $secpasswd = ConvertTo-SecureString $NewAdminPassword -AsPlainText -Force
 
    $NewAdminCreds = New-Object System.Management.Automation.PSCredential ($NewAdminUPN, $secpasswd)
 
    Write-Host " "
 
    Write-Output "Getting the Exchange Online cmdlets as $NewAdminUPN"
 
    $Session = New-PSSession -ConnectionUri https://outlook.office365.com/powershell-liveid/ `
    -ConfigurationName Microsoft.Exchange -Credential $NewAdminCreds `
    -Authentication Basic -AllowRedirection
    Import-PSSession $Session -AllowClobber
 
    # Enable the customization of the Exchange Organisation
 
    Enable-OrganizationCustomization
 
    # Enable the Unified Audit Log
 
    Set-AdminAuditLogConfig -UnifiedAuditLogIngestionEnabled $true
 
    # Find out whether it worked
 
    $AuditLogConfigResult = Get-AdminAuditLogConfig
 
    Remove-PSSession $Session
 
    # If it worked, remove the Admin and add the removed admin details to a CSV
 
    if($AuditLogConfigResult.UnifiedAuditLogIngestionEnabled){
 
        # Remove the temporary admin
        Write-Host "Removing the temporary Admin"
 
        Remove-MsolUser -TenantId $Customer.TenantId -UserPrincipalName $NewAdminUPN -Force
 
        $AdminProperties = @{
            TenantId = $Customer.TenantId
            CompanyName = $Customer.CompanyName
            DefaultDomainName = $Customer.DefaultDomainName
            UserPrincipalName = $NewAdminUPN
            Action = "REMOVED"
        }
 
        $RemovedAdmins = @()
        $RemovedAdmins += New-Object psobject -Property $AdminProperties
        $RemovedAdmins | Select-Object TenantId,CompanyName,DefaultDomainName,UserPrincipalName,Action | Export-Csv -notypeinformation -Path $RemovedAdminsCsv -Append
 
    }
 
    # If it didn't work, keep the Admin and add the admin details to another CSV. You can use the RemainingAdmins CSV if you'd like to try again.
 
    if(!$AuditLogConfigResult.UnifiedAuditLogIngestionEnabled){
 
        Write-Host "Enabling Audit Log Failed, keeping the temporary Admin"
 
        $AdminProperties = @{
            TenantId = $Customer.TenantId
            CompanyName = $Customer.CompanyName
            DefaultDomainName = $Customer.DefaultDomainName
            UserPrincipalName = $NewAdminUPN
            Action = "UNCHANGED"
        }
 
        $RemainingAdmins = @()
        $RemainingAdmins += New-Object psobject -Property $AdminProperties
        $RemainingAdmins | Select-Object TenantId,CompanyName,DefaultDomainName,UserPrincipalName,Action | Export-Csv -notypeinformation -Path $RemainingAdminsCsv -Append
 
    }
 
    Write-Host " "
    Write-Host "----------------------------------------------------------"
    Write-Host " "
 
}